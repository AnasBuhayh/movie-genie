# Movie Genie Docker Build Context Ignore
# Excludes unnecessary files from Docker build context for faster builds

# Python
__pycache__/
*.py[cod]
*$py.class
*.so
.Python
*.egg-info/
dist/
build/
*.egg

# Virtual Environments
venv/
env/
.venv/
ENV/

# macOS
.DS_Store
.AppleDouble
.LSOverride

# Data (large files, managed by volumes)
data/raw/
data/interim/
data/processed/
*.parquet
*.csv
*.xlsx

# Models (large files, managed by volumes)
models/

# IDE
.vscode/
.idea/
*.swp
*.swo
*~

# Jupyter
.ipynb_checkpoints/
*.ipynb

# Environment files (will be provided via docker-compose)
.env
.env.local
.env.*.local

# DVC cache (large files, managed by volumes)
.dvc/tmp/
.dvc/cache/

# Results
results/
metrics/*.json

# Logs (will be managed by volumes)
*.log
logs/

# MLflow (managed by volumes)
mlruns/
mlartifacts/
mlflow.db
mlflow.db.lock

# Frontend (will be built inside container)
node_modules/
movie_genie/frontend/node_modules/
movie_genie/frontend/dist/
movie_genie/frontend/build/
movie_genie/frontend/.cache/
movie_genie/frontend/.vite/

# Backend build artifacts
movie_genie/backend/templates/index.html
movie_genie/backend/static/
movie_genie/backend/dist/

# Testing
.pytest_cache/
.coverage
htmlcov/
*.cover
.hypothesis/

# OS
Thumbs.db
*.bak
*.tmp

# Git
.git/
.gitignore
.gitattributes

# Documentation build artifacts (docs container builds separately)
site/
docs/.cache/

# Docker files (don't include in build context)
docker-compose.yml
docker-compose.*.yml
Dockerfile*
.dockerignore

# CI/CD
.github/
.gitlab-ci.yml
.travis.yml

# Development scripts
scripts/app.sh
scripts/docker.sh

# DVC files (not needed in container)
.dvc/
dvc.yaml
dvc.lock
*.dvc

# Project specific
*.lock
!dvc.lock
!package-lock.json
